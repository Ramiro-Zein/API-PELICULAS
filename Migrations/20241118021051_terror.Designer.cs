// <auto-generated />
using System;
using API_PELICULAS.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_PELICULAS.Migrations
{
    [DbContext(typeof(PeliculasDbContext))]
    [Migration("20241118021051_terror")]
    partial class terror
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_PELICULAS.Models.Genero", b =>
                {
                    b.Property<Guid>("IdGenero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NombreGenero")
                        .HasColumnType("int");

                    b.HasKey("IdGenero");

                    b.ToTable("Generos");

                    b.HasData(
                        new
                        {
                            IdGenero = new Guid("12345678-1234-1234-1234-1234567890ab"),
                            NombreGenero = 0
                        },
                        new
                        {
                            IdGenero = new Guid("23456789-2345-2345-2345-2345678901bc"),
                            NombreGenero = 2
                        },
                        new
                        {
                            IdGenero = new Guid("34567890-3456-3456-3456-3456789012cd"),
                            NombreGenero = 3
                        },
                        new
                        {
                            IdGenero = new Guid("45678901-4567-4567-4567-4567890123de"),
                            NombreGenero = 1
                        },
                        new
                        {
                            IdGenero = new Guid("34567890-3456-3456-3456-3456789012ab"),
                            NombreGenero = 4
                        });
                });

            modelBuilder.Entity("API_PELICULAS.Models.Historial", b =>
                {
                    b.Property<Guid>("IdHistorial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("FechaVista")
                        .HasColumnType("date");

                    b.Property<Guid>("IdPelicula")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdHistorial");

                    b.HasIndex("IdPelicula");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Historiales");

                    b.HasData(
                        new
                        {
                            IdHistorial = new Guid("01234567-0123-0123-0123-0123456789d4"),
                            FechaVista = new DateOnly(2024, 1, 15),
                            IdPelicula = new Guid("78901234-7890-7890-7890-7890123456a1"),
                            IdUsuario = new Guid("56789012-5678-5678-5678-5678901234ef")
                        },
                        new
                        {
                            IdHistorial = new Guid("11234567-1123-1123-1123-1123456789e5"),
                            FechaVista = new DateOnly(2024, 2, 20),
                            IdPelicula = new Guid("89012345-8901-8901-8901-8901234567b2"),
                            IdUsuario = new Guid("56789012-5678-5678-5678-5678901234ef")
                        },
                        new
                        {
                            IdHistorial = new Guid("21234567-2123-2123-2123-2123456789f6"),
                            FechaVista = new DateOnly(2024, 3, 10),
                            IdPelicula = new Guid("90123456-9012-9012-9012-9012345678c3"),
                            IdUsuario = new Guid("67890123-6789-6789-6789-6789012345f0")
                        },
                        new
                        {
                            IdHistorial = new Guid("31234567-3123-3123-3123-3123456789a7"),
                            FechaVista = new DateOnly(2024, 4, 5),
                            IdPelicula = new Guid("78901234-7890-7890-7890-7890123456a1"),
                            IdUsuario = new Guid("67890123-6789-6789-6789-6789012345f0")
                        });
                });

            modelBuilder.Entity("API_PELICULAS.Models.Pelicula", b =>
                {
                    b.Property<Guid>("IdPelicula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ClasificacionPelicula")
                        .HasColumnType("int");

                    b.Property<string>("DescripcionPelicula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("DuracionPelicula")
                        .HasColumnType("time");

                    b.Property<Guid?>("GeneroPeliculaIdGenero")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdGenero")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TituloPelicula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPelicula");

                    b.HasIndex("GeneroPeliculaIdGenero");

                    b.ToTable("Peliculas");

                    b.HasData(
                        new
                        {
                            IdPelicula = new Guid("78901234-7890-7890-7890-7890123456a1"),
                            ClasificacionPelicula = 5,
                            DescripcionPelicula = "Una emocionante aventura de acción.",
                            DuracionPelicula = new TimeOnly(2, 30, 0),
                            IdGenero = new Guid("12345678-1234-1234-1234-1234567890ab"),
                            TituloPelicula = "Accion Épica"
                        },
                        new
                        {
                            IdPelicula = new Guid("89012345-8901-8901-8901-8901234567b2"),
                            ClasificacionPelicula = 3,
                            DescripcionPelicula = "Una comedia divertida para toda la familia.",
                            DuracionPelicula = new TimeOnly(1, 45, 0),
                            IdGenero = new Guid("23456789-2345-2345-2345-2345678901bc"),
                            TituloPelicula = "Comedia Ligera"
                        },
                        new
                        {
                            IdPelicula = new Guid("90123456-9012-9012-9012-9012345678c3"),
                            ClasificacionPelicula = 4,
                            DescripcionPelicula = "Un drama que te dejará sin aliento.",
                            DuracionPelicula = new TimeOnly(2, 0, 0),
                            IdGenero = new Guid("34567890-3456-3456-3456-3456789012cd"),
                            TituloPelicula = "Drama Intenso"
                        });
                });

            modelBuilder.Entity("API_PELICULAS.Models.PeliculaGenero", b =>
                {
                    b.Property<Guid>("IdPelicula")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdGenero")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdPelicula", "IdGenero");

                    b.HasIndex("IdGenero");

                    b.ToTable("PeliculaGenero");

                    b.HasData(
                        new
                        {
                            IdPelicula = new Guid("78901234-7890-7890-7890-7890123456a1"),
                            IdGenero = new Guid("12345678-1234-1234-1234-1234567890ab")
                        },
                        new
                        {
                            IdPelicula = new Guid("89012345-8901-8901-8901-8901234567b2"),
                            IdGenero = new Guid("23456789-2345-2345-2345-2345678901bc")
                        },
                        new
                        {
                            IdPelicula = new Guid("90123456-9012-9012-9012-9012345678c3"),
                            IdGenero = new Guid("34567890-3456-3456-3456-3456789012cd")
                        },
                        new
                        {
                            IdPelicula = new Guid("78901234-7890-7890-7890-7890123456a1"),
                            IdGenero = new Guid("23456789-2345-2345-2345-2345678901bc")
                        });
                });

            modelBuilder.Entity("API_PELICULAS.Models.Usuario", b =>
                {
                    b.Property<Guid>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClaveUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusUsuario")
                        .HasColumnType("int");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            IdUsuario = new Guid("56789012-5678-5678-5678-5678901234ef"),
                            ClaveUsuario = "$2a$11$eaUL39BaFn.9SgHJGveQeeoHKe1mLsjnZqAJTo6mr074ucvRCMdbC",
                            EstatusUsuario = 1,
                            NombreUsuario = "ramiro.zein"
                        },
                        new
                        {
                            IdUsuario = new Guid("67890123-6789-6789-6789-6789012345f0"),
                            ClaveUsuario = "$2a$11$ubi58MKoAUjr25Co4IMtvOxXC7Zw60EFzxbY.cO5mk95VJnXLIy3e",
                            EstatusUsuario = 0,
                            NombreUsuario = "maria.lopez"
                        });
                });

            modelBuilder.Entity("API_PELICULAS.Models.Historial", b =>
                {
                    b.HasOne("API_PELICULAS.Models.Pelicula", "Pelicula")
                        .WithMany()
                        .HasForeignKey("IdPelicula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_PELICULAS.Models.Usuario", "Usuario")
                        .WithMany("Historiales")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pelicula");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("API_PELICULAS.Models.Pelicula", b =>
                {
                    b.HasOne("API_PELICULAS.Models.Genero", "GeneroPelicula")
                        .WithMany()
                        .HasForeignKey("GeneroPeliculaIdGenero");

                    b.Navigation("GeneroPelicula");
                });

            modelBuilder.Entity("API_PELICULAS.Models.PeliculaGenero", b =>
                {
                    b.HasOne("API_PELICULAS.Models.Genero", "Genero")
                        .WithMany("PeliculaGeneros")
                        .HasForeignKey("IdGenero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_PELICULAS.Models.Pelicula", "Pelicula")
                        .WithMany("PeliculaGeneros")
                        .HasForeignKey("IdPelicula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genero");

                    b.Navigation("Pelicula");
                });

            modelBuilder.Entity("API_PELICULAS.Models.Genero", b =>
                {
                    b.Navigation("PeliculaGeneros");
                });

            modelBuilder.Entity("API_PELICULAS.Models.Pelicula", b =>
                {
                    b.Navigation("PeliculaGeneros");
                });

            modelBuilder.Entity("API_PELICULAS.Models.Usuario", b =>
                {
                    b.Navigation("Historiales");
                });
#pragma warning restore 612, 618
        }
    }
}
