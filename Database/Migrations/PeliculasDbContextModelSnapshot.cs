// <auto-generated />
using System;
using API_PELICULAS.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_PELICULAS.Migrations
{
    [DbContext(typeof(PeliculasDbContext))]
    partial class PeliculasDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_PELICULAS.Models.Genero", b =>
                {
                    b.Property<Guid>("IdGenero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NombreGenero")
                        .HasColumnType("int");

                    b.HasKey("IdGenero");

                    b.ToTable("Generos", (string)null);

                    b.HasData(
                        new
                        {
                            IdGenero = new Guid("12345678-1234-1234-1234-1234567890ab"),
                            NombreGenero = 0
                        },
                        new
                        {
                            IdGenero = new Guid("23456789-2345-2345-2345-2345678901bc"),
                            NombreGenero = 2
                        },
                        new
                        {
                            IdGenero = new Guid("34567890-3456-3456-3456-3456789012cd"),
                            NombreGenero = 3
                        },
                        new
                        {
                            IdGenero = new Guid("45678901-4567-4567-4567-4567890123de"),
                            NombreGenero = 1
                        },
                        new
                        {
                            IdGenero = new Guid("56789012-5678-5678-5678-5678901234ef"),
                            NombreGenero = 4
                        },
                        new
                        {
                            IdGenero = new Guid("67890123-6789-6789-6789-6789012345fa"),
                            NombreGenero = 5
                        },
                        new
                        {
                            IdGenero = new Guid("78901234-7890-7890-7890-7890123456ac"),
                            NombreGenero = 6
                        },
                        new
                        {
                            IdGenero = new Guid("89012345-8901-8901-8901-8901234567bd"),
                            NombreGenero = 7
                        },
                        new
                        {
                            IdGenero = new Guid("90123456-9012-9012-9012-9012345678ce"),
                            NombreGenero = 8
                        },
                        new
                        {
                            IdGenero = new Guid("01234567-0123-0123-0123-0123456789df"),
                            NombreGenero = 9
                        },
                        new
                        {
                            IdGenero = new Guid("11234567-1123-1123-1123-1123456789ea"),
                            NombreGenero = 10
                        },
                        new
                        {
                            IdGenero = new Guid("21234567-2123-2123-2123-2123456789fb"),
                            NombreGenero = 11
                        },
                        new
                        {
                            IdGenero = new Guid("31234567-3123-3123-3123-3123456789bc"),
                            NombreGenero = 12
                        },
                        new
                        {
                            IdGenero = new Guid("41234567-4123-4123-4123-4123456789cd"),
                            NombreGenero = 13
                        });
                });

            modelBuilder.Entity("API_PELICULAS.Models.Historial", b =>
                {
                    b.Property<Guid>("IdHistorial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("FechaVista")
                        .HasColumnType("date");

                    b.Property<Guid>("IdPelicula")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdHistorial");

                    b.HasIndex("IdPelicula");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Historiales", (string)null);

                    b.HasData(
                        new
                        {
                            IdHistorial = new Guid("01234567-0123-0123-0123-0123456789d4"),
                            FechaVista = new DateOnly(2024, 1, 15),
                            IdPelicula = new Guid("78901234-7890-7890-7890-7890123456a1"),
                            IdUsuario = new Guid("56789012-5678-5678-5678-5678901234ef")
                        },
                        new
                        {
                            IdHistorial = new Guid("11234567-1123-1123-1123-1123456789e5"),
                            FechaVista = new DateOnly(2024, 2, 20),
                            IdPelicula = new Guid("89012345-8901-8901-8901-8901234567b2"),
                            IdUsuario = new Guid("56789012-5678-5678-5678-5678901234ef")
                        },
                        new
                        {
                            IdHistorial = new Guid("21234567-2123-2123-2123-2123456789f6"),
                            FechaVista = new DateOnly(2024, 3, 10),
                            IdPelicula = new Guid("90123456-9012-9012-9012-9012345678c3"),
                            IdUsuario = new Guid("67890123-6789-6789-6789-6789012345f0")
                        },
                        new
                        {
                            IdHistorial = new Guid("31234567-3123-3123-3123-3123456789a7"),
                            FechaVista = new DateOnly(2024, 4, 5),
                            IdPelicula = new Guid("78901234-7890-7890-7890-7890123456a1"),
                            IdUsuario = new Guid("67890123-6789-6789-6789-6789012345f0")
                        },
                        new
                        {
                            IdHistorial = new Guid("9ab2c456-9012-9012-9012-9012345678c3"),
                            FechaVista = new DateOnly(2020, 9, 4),
                            IdPelicula = new Guid("12345678-5678-1234-1234-5678901234de"),
                            IdUsuario = new Guid("56789012-5678-5678-5678-5678901234ef")
                        });
                });

            modelBuilder.Entity("API_PELICULAS.Models.Pelicula", b =>
                {
                    b.Property<Guid>("IdPelicula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ClasificacionPelicula")
                        .HasColumnType("int");

                    b.Property<string>("DescripcionPelicula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("DuracionPelicula")
                        .HasColumnType("time");

                    b.Property<Guid?>("GeneroPeliculaIdGenero")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdGenero")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TituloPelicula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPelicula");

                    b.HasIndex("GeneroPeliculaIdGenero");

                    b.ToTable("Peliculas", (string)null);

                    b.HasData(
                        new
                        {
                            IdPelicula = new Guid("78901234-7890-7890-7890-7890123456a1"),
                            ClasificacionPelicula = 18,
                            DescripcionPelicula = "Una persecución al límite en un mundo postapocalíptico.",
                            DuracionPelicula = new TimeOnly(2, 0, 0),
                            IdGenero = new Guid("12345678-1234-1234-1234-1234567890ab"),
                            TituloPelicula = "Mad Max: Fury Road"
                        },
                        new
                        {
                            IdPelicula = new Guid("89012345-8901-8901-8901-8901234567b2"),
                            ClasificacionPelicula = 16,
                            DescripcionPelicula = "Dos adolescentes planean una fiesta inolvidable.",
                            DuracionPelicula = new TimeOnly(1, 53, 0),
                            IdGenero = new Guid("23456789-2345-2345-2345-2345678901bc"),
                            TituloPelicula = "Superbad"
                        },
                        new
                        {
                            IdPelicula = new Guid("90123456-9012-9012-9012-9012345678c3"),
                            ClasificacionPelicula = 18,
                            DescripcionPelicula = "Un hombre injustamente encarcelado encuentra la redención.",
                            DuracionPelicula = new TimeOnly(2, 22, 0),
                            IdGenero = new Guid("34567890-3456-3456-3456-3456789012cd"),
                            TituloPelicula = "The Shawshank Redemption"
                        },
                        new
                        {
                            IdPelicula = new Guid("12345678-5678-1234-1234-5678901234de"),
                            ClasificacionPelicula = 12,
                            DescripcionPelicula = "Una historia de amor y tragedia en el océano.",
                            DuracionPelicula = new TimeOnly(3, 14, 0),
                            IdGenero = new Guid("45678901-4567-4567-4567-4567890123de"),
                            TituloPelicula = "Titanic"
                        },
                        new
                        {
                            IdPelicula = new Guid("23456789-6789-2345-2345-6789012345fe"),
                            ClasificacionPelicula = 18,
                            DescripcionPelicula = "Investigadores paranormales enfrentan un caso aterrador.",
                            DuracionPelicula = new TimeOnly(1, 52, 0),
                            IdGenero = new Guid("56789012-5678-5678-5678-5678901234ef"),
                            TituloPelicula = "The Conjuring"
                        },
                        new
                        {
                            IdPelicula = new Guid("34567890-7890-3456-3456-7890123456af"),
                            ClasificacionPelicula = 13,
                            DescripcionPelicula = "Un hobbit comienza una misión para destruir un anillo poderoso.",
                            DuracionPelicula = new TimeOnly(2, 58, 0),
                            IdGenero = new Guid("67890123-6789-6789-6789-6789012345fa"),
                            TituloPelicula = "The Lord of the Rings: The Fellowship of the Ring"
                        },
                        new
                        {
                            IdPelicula = new Guid("45678901-8901-4567-4567-8901234567bf"),
                            ClasificacionPelicula = 8,
                            DescripcionPelicula = "Un cautivador documental sobre la vida de los pingüinos emperador.",
                            DuracionPelicula = new TimeOnly(1, 20, 0),
                            IdGenero = new Guid("78901234-7890-7890-7890-7890123456ac"),
                            TituloPelicula = "March of the Penguins"
                        },
                        new
                        {
                            IdPelicula = new Guid("56789012-9012-5678-5678-9012345678cf"),
                            ClasificacionPelicula = 14,
                            DescripcionPelicula = "Un músico y una actriz persiguen sus sueños en Los Ángeles.",
                            DuracionPelicula = new TimeOnly(2, 8, 0),
                            IdGenero = new Guid("89012345-8901-8901-8901-8901234567bd"),
                            TituloPelicula = "La La Land"
                        },
                        new
                        {
                            IdPelicula = new Guid("67890123-0123-6789-6789-0123456789df"),
                            ClasificacionPelicula = 13,
                            DescripcionPelicula = "Un arqueólogo busca el Arca de la Alianza.",
                            DuracionPelicula = new TimeOnly(1, 55, 0),
                            IdGenero = new Guid("90123456-9012-9012-9012-9012345678ce"),
                            TituloPelicula = "Indiana Jones: Raiders of the Lost Ark"
                        },
                        new
                        {
                            IdPelicula = new Guid("78901234-1234-7890-7890-1234567890ef"),
                            ClasificacionPelicula = 18,
                            DescripcionPelicula = "Dos detectives investigan crímenes inspirados en los siete pecados capitales.",
                            DuracionPelicula = new TimeOnly(2, 7, 0),
                            IdGenero = new Guid("01234567-0123-0123-0123-0123456789df"),
                            TituloPelicula = "Se7en"
                        });
                });

            modelBuilder.Entity("API_PELICULAS.Models.PeliculaGenero", b =>
                {
                    b.Property<Guid>("IdPelicula")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdGenero")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdPelicula", "IdGenero");

                    b.HasIndex("IdGenero");

                    b.ToTable("PeliculaGenero", (string)null);

                    b.HasData(
                        new
                        {
                            IdPelicula = new Guid("78901234-7890-7890-7890-7890123456a1"),
                            IdGenero = new Guid("12345678-1234-1234-1234-1234567890ab")
                        },
                        new
                        {
                            IdPelicula = new Guid("89012345-8901-8901-8901-8901234567b2"),
                            IdGenero = new Guid("23456789-2345-2345-2345-2345678901bc")
                        },
                        new
                        {
                            IdPelicula = new Guid("90123456-9012-9012-9012-9012345678c3"),
                            IdGenero = new Guid("34567890-3456-3456-3456-3456789012cd")
                        },
                        new
                        {
                            IdPelicula = new Guid("12345678-5678-1234-1234-5678901234de"),
                            IdGenero = new Guid("45678901-4567-4567-4567-4567890123de")
                        },
                        new
                        {
                            IdPelicula = new Guid("23456789-6789-2345-2345-6789012345fe"),
                            IdGenero = new Guid("56789012-5678-5678-5678-5678901234ef")
                        },
                        new
                        {
                            IdPelicula = new Guid("34567890-7890-3456-3456-7890123456af"),
                            IdGenero = new Guid("67890123-6789-6789-6789-6789012345fa")
                        },
                        new
                        {
                            IdPelicula = new Guid("45678901-8901-4567-4567-8901234567bf"),
                            IdGenero = new Guid("78901234-7890-7890-7890-7890123456ac")
                        },
                        new
                        {
                            IdPelicula = new Guid("56789012-9012-5678-5678-9012345678cf"),
                            IdGenero = new Guid("89012345-8901-8901-8901-8901234567bd")
                        },
                        new
                        {
                            IdPelicula = new Guid("67890123-0123-6789-6789-0123456789df"),
                            IdGenero = new Guid("90123456-9012-9012-9012-9012345678ce")
                        },
                        new
                        {
                            IdPelicula = new Guid("78901234-1234-7890-7890-1234567890ef"),
                            IdGenero = new Guid("01234567-0123-0123-0123-0123456789df")
                        });
                });

            modelBuilder.Entity("API_PELICULAS.Models.Usuario", b =>
                {
                    b.Property<Guid>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClaveUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusUsuario")
                        .HasColumnType("int");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios", (string)null);

                    b.HasData(
                        new
                        {
                            IdUsuario = new Guid("56789012-5678-5678-5678-5678901234ef"),
                            ClaveUsuario = "$2a$11$LoTgvLFehmE39wHanK7thOOLhXBByAFlIbsCQ8JiSo40BGYCK9aru",
                            EstatusUsuario = 1,
                            NombreUsuario = "ramiro.zein"
                        },
                        new
                        {
                            IdUsuario = new Guid("67890123-6789-6789-6789-6789012345f0"),
                            ClaveUsuario = "$2a$11$iwSGyOFRPz/7DK8.05EVUeYVjA4IHvxNRkyEXWZNDftBKB5A0nAE.",
                            EstatusUsuario = 1,
                            NombreUsuario = "maria.lopez"
                        });
                });

            modelBuilder.Entity("API_PELICULAS.Models.Historial", b =>
                {
                    b.HasOne("API_PELICULAS.Models.Pelicula", "Pelicula")
                        .WithMany()
                        .HasForeignKey("IdPelicula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_PELICULAS.Models.Usuario", "Usuario")
                        .WithMany("Historiales")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pelicula");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("API_PELICULAS.Models.Pelicula", b =>
                {
                    b.HasOne("API_PELICULAS.Models.Genero", "GeneroPelicula")
                        .WithMany()
                        .HasForeignKey("GeneroPeliculaIdGenero");

                    b.Navigation("GeneroPelicula");
                });

            modelBuilder.Entity("API_PELICULAS.Models.PeliculaGenero", b =>
                {
                    b.HasOne("API_PELICULAS.Models.Genero", "Genero")
                        .WithMany("PeliculaGeneros")
                        .HasForeignKey("IdGenero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_PELICULAS.Models.Pelicula", "Pelicula")
                        .WithMany("PeliculaGeneros")
                        .HasForeignKey("IdPelicula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genero");

                    b.Navigation("Pelicula");
                });

            modelBuilder.Entity("API_PELICULAS.Models.Genero", b =>
                {
                    b.Navigation("PeliculaGeneros");
                });

            modelBuilder.Entity("API_PELICULAS.Models.Pelicula", b =>
                {
                    b.Navigation("PeliculaGeneros");
                });

            modelBuilder.Entity("API_PELICULAS.Models.Usuario", b =>
                {
                    b.Navigation("Historiales");
                });
#pragma warning restore 612, 618
        }
    }
}
